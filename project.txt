Chrome Extension: Real-Time Audio Transcription
Project Overview
Build a Chrome extension that captures audio from browser tabs and provides transcription with a user-friendly sidepanel interface.
Core Features
1. Sidepanel Interface
Primary Controls: Start/stop recording buttons with clear visual states
Live Transcription Display: Show transcript updates with auto-scroll
Status Indicators: Recording state, connection status, and error notifications
Meeting Timer: Display current session duration
Export Functionality: Copy transcript to clipboard or download as text/JSON
2. Audio Capture System
Tab Audio Capture: Primary focus on capturing audio from the active browser tab
Multi-source Support (Bonus):
Capture audio from inactive tabs
Optional microphone input capture
Channel labeling (Tab Audio vs Microphone)
Processing Options:
Chunked Mode: Buffer and transcribe audio segments every 30 seconds
Bonus: Overlap of 3 seconds of audio between consecutive 30 second chunks so that no words are lost between chunks
3. Transcription Integration
API Selection: Recommended APIs in order of preference:
Google Gemini 2.5 Flash for transcription (Use multi-modal LLM with prompt to “transcribe” every 30 seconds. You can get free credits from Google)
OpenAI Whisper API
Deepgram API
Fireworks API
4. Reliability & Performance
Error Handling:
Automatic retry logic with exponential backoff
Graceful degradation when APIs are unavailable
User-friendly error messages with suggested actions
Offline Capabilities (Bonus):
Local audio buffering during connection loss
Automatic sync when connection restored
Queue management for failed requests
Performance Optimization:
Minimal CPU usage through efficient audio processing
Memory management for long recording sessions
Background processing to avoid UI blocking
Technical Requirements
Browser Compatibility
Primary Target: Google Chrome (latest version)
Minimum Version: Chrome 88+ (required for getDisplayMedia API)
Permissions & Security
Required Permissions:
tabCapture - For capturing tab audio
activeTab - For accessing current tab information
sidePanel - For sidepanel interface
storage - For saving transcripts and settings
Optional Permissions:
microphone - If microphone capture is implemented
background - For offline buffering functionality
Architecture Requirements
Manifest Version: V3 (required for modern Chrome extensions)
Service Worker: For background processing and API calls
Content Scripts: Minimal usage, primarily for tab interaction
Sidepanel: Primary user interface
User Experience
Interface Design
Clean, Minimal Layout: Focus on transcription content. You can use TwinMind Chrome extension UI as reference but simplify it for just transcription
Real-time Updates: Streaming transcription or refresh every 30 seconds without jarring jumps
Timestamp Integration: Show time markers at configurable intervals
Visual Feedback: Clear indicators for recording, processing, and error states
Accessibility: Keyboard navigation and screen reader support
Workflow
User opens sidepanel
Grants necessary permissions (one-time setup)
Clicks start recording
Transcription appears with timestamps
User can pause/resume or stop recording
Export options available during and after recording
Development Guidelines
Error Handling Standards
All API failures must have user-friendly messages
Automatic retry attempts (max 3) with progressive delays
Fallback options when primary transcription service fails
Comprehensive logging for debugging
API Integration Details
Recommended: Google Gemini 2.5 Flash for Speech-to-Text (“Transcribe” prompt)
Advantages: Free tier available, good accuracy
Submission Requirements
1. Code Repository
GitHub Repository: Public repo with clear README
Documentation: Setup instructions, API key configuration
Code Quality: ESLint configuration, proper commenting
Demo Video: 2-3 minute walkthrough of functionality
2. Backend Services (if applicable)
Deployment: Live backend on Heroku, Vercel, or similar
Environment Setup: Clear documentation of required variables
Health Endpoints: Basic monitoring and status endpoints
3. Chrome Extension Package
Zip File: Complete extension ready for Chrome Web Store
Distribution: Share via Google Drive, Dropbox, or GitHub releases
Installation Guide: Step-by-step setup instructions
4. Additional Deliverables
Architecture Diagram: Visual representation of component interaction
Performance Report: Memory and CPU usage statistics
Known Limitations: Current constraints and future improvement areas
Success Criteria
Minimum Viable Product (MVP)
✅ Captures audio from active browser tab (e.g. google meet, YouTube, any tab playing audio)
✅ Update transcript every 30 seconds and display in sidepanel
✅ Start/stop recording controls
✅ Basic error handling and user feedback
✅ Export/Copy transcript functionality
Excellent Implementation
✅ All MVP features plus:
✅ Multi-tab audio capture
✅ Channel labeling (tab vs microphone)
✅ Offline buffering capability (e.g. when internet disconnects briefly)
✅ Performance optimization
✅ Comprehensive error handling
✅ Good UI/UX design to show which tab’s audio is being captured
✅ Use overlap of 3 seconds of audio between consecutive 30 second chunks to make sure that no words are lost between chunks
